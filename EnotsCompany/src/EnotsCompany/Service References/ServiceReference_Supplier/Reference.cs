//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference_Supplier
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.4.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Supplier", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary_EnotsCompany.DAL")]
    public partial class Supplier : object
    {
        
        private string AddressField;
        
        private string AvatarField;
        
        private string BussinessTypeField;
        
        private System.Nullable<int> CategoryIdField;
        
        private string CompanyNameField;
        
        private string CountryField;
        
        private ServiceReference_Supplier.Country Country1Field;
        
        private System.Nullable<int> CountryIdField;
        
        private string EmailField;
        
        private string MainProductField;
        
        private string NameField;
        
        private string PhoneField;
        
        private string ProvinceField;
        
        private string StatusField;
        
        private string SupplierIdField;
        
        private string TitleField;
        
        private string TotalEmployeesField;
        
        private string WebsiteField;
        
        private System.Nullable<System.DateTime> YearEstablishedField;
        
        private System.Nullable<int> ZipcodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Avatar
        {
            get
            {
                return this.AvatarField;
            }
            set
            {
                this.AvatarField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BussinessType
        {
            get
            {
                return this.BussinessTypeField;
            }
            set
            {
                this.BussinessTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryId
        {
            get
            {
                return this.CategoryIdField;
            }
            set
            {
                this.CategoryIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName
        {
            get
            {
                return this.CompanyNameField;
            }
            set
            {
                this.CompanyNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country
        {
            get
            {
                return this.CountryField;
            }
            set
            {
                this.CountryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference_Supplier.Country Country1
        {
            get
            {
                return this.Country1Field;
            }
            set
            {
                this.Country1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CountryId
        {
            get
            {
                return this.CountryIdField;
            }
            set
            {
                this.CountryIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainProduct
        {
            get
            {
                return this.MainProductField;
            }
            set
            {
                this.MainProductField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return this.PhoneField;
            }
            set
            {
                this.PhoneField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province
        {
            get
            {
                return this.ProvinceField;
            }
            set
            {
                this.ProvinceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierId
        {
            get
            {
                return this.SupplierIdField;
            }
            set
            {
                this.SupplierIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalEmployees
        {
            get
            {
                return this.TotalEmployeesField;
            }
            set
            {
                this.TotalEmployeesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website
        {
            get
            {
                return this.WebsiteField;
            }
            set
            {
                this.WebsiteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> YearEstablished
        {
            get
            {
                return this.YearEstablishedField;
            }
            set
            {
                this.YearEstablishedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Zipcode
        {
            get
            {
                return this.ZipcodeField;
            }
            set
            {
                this.ZipcodeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.4.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary_EnotsCompany.DAL")]
    public partial class Country : object
    {
        
        private string CommonNameField;
        
        private string CountryCodeField;
        
        private int CountryIdField;
        
        private string StatusCountryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommonName
        {
            get
            {
                return this.CommonNameField;
            }
            set
            {
                this.CommonNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode
        {
            get
            {
                return this.CountryCodeField;
            }
            set
            {
                this.CountryCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId
        {
            get
            {
                return this.CountryIdField;
            }
            set
            {
                this.CountryIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusCountry
        {
            get
            {
                return this.StatusCountryField;
            }
            set
            {
                this.StatusCountryField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.4.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyFaultException", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary_EnotsCompany.My_Excepti" +
        "on")]
    public partial class MyFaultException : object
    {
        
        private string errorCodeField;
        
        private string messageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message
        {
            get
            {
                return this.messageField;
            }
            set
            {
                this.messageField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.4.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference_Supplier.ISupplierService")]
    public interface ISupplierService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/getAllSupplier", ReplyAction="http://tempuri.org/ISupplierService/getAllSupplierResponse")]
        System.Threading.Tasks.Task<ServiceReference_Supplier.Supplier[]> getAllSupplierAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/findSupplierById", ReplyAction="http://tempuri.org/ISupplierService/findSupplierByIdResponse")]
        System.Threading.Tasks.Task<ServiceReference_Supplier.Supplier> findSupplierByIdAsync(string supId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/createSupplier", ReplyAction="http://tempuri.org/ISupplierService/createSupplierResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceReference_Supplier.MyFaultException), Action="http://tempuri.org/ISupplierService/createSupplierMyFaultExceptionFault", Name="MyFaultException", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary_EnotsCompany.My_Excepti" +
            "on")]
        System.Threading.Tasks.Task<bool> createSupplierAsync(ServiceReference_Supplier.Supplier sup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/updateSupplier", ReplyAction="http://tempuri.org/ISupplierService/updateSupplierResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceReference_Supplier.MyFaultException), Action="http://tempuri.org/ISupplierService/updateSupplierMyFaultExceptionFault", Name="MyFaultException", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary_EnotsCompany.My_Excepti" +
            "on")]
        System.Threading.Tasks.Task<bool> updateSupplierAsync(ServiceReference_Supplier.Supplier sup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/deleteSupplier", ReplyAction="http://tempuri.org/ISupplierService/deleteSupplierResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ServiceReference_Supplier.MyFaultException), Action="http://tempuri.org/ISupplierService/deleteSupplierMyFaultExceptionFault", Name="MyFaultException", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary_EnotsCompany.My_Excepti" +
            "on")]
        System.Threading.Tasks.Task<bool> deleteSupplierAsync(string supId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/getSupplierId", ReplyAction="http://tempuri.org/ISupplierService/getSupplierIdResponse")]
        System.Threading.Tasks.Task<string> getSupplierIdAsync(int countryId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.4.0.0")]
    public interface ISupplierServiceChannel : ServiceReference_Supplier.ISupplierService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.4.0.0")]
    public partial class SupplierServiceClient : System.ServiceModel.ClientBase<ServiceReference_Supplier.ISupplierService>, ServiceReference_Supplier.ISupplierService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SupplierServiceClient() : 
                base(SupplierServiceClient.GetDefaultBinding(), SupplierServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ISupplierService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SupplierServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(SupplierServiceClient.GetBindingForEndpoint(endpointConfiguration), SupplierServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SupplierServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SupplierServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SupplierServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SupplierServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SupplierServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReference_Supplier.Supplier[]> getAllSupplierAsync()
        {
            return base.Channel.getAllSupplierAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference_Supplier.Supplier> findSupplierByIdAsync(string supId)
        {
            return base.Channel.findSupplierByIdAsync(supId);
        }
        
        public System.Threading.Tasks.Task<bool> createSupplierAsync(ServiceReference_Supplier.Supplier sup)
        {
            return base.Channel.createSupplierAsync(sup);
        }
        
        public System.Threading.Tasks.Task<bool> updateSupplierAsync(ServiceReference_Supplier.Supplier sup)
        {
            return base.Channel.updateSupplierAsync(sup);
        }
        
        public System.Threading.Tasks.Task<bool> deleteSupplierAsync(string supId)
        {
            return base.Channel.deleteSupplierAsync(supId);
        }
        
        public System.Threading.Tasks.Task<string> getSupplierIdAsync(int countryId)
        {
            return base.Channel.getSupplierIdAsync(countryId);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISupplierService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISupplierService))
            {
                return new System.ServiceModel.EndpointAddress("http://10.107.14.95/IISHosting/EnotsCompany/SupplierService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return SupplierServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ISupplierService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return SupplierServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ISupplierService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ISupplierService,
        }
    }
}
